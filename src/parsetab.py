
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BEGIN BIRTH BURIAL CHAN CHR CONT CONTENT DEATH END_FILE FAM GEDC INDI LEVEL MAR MULTITAG POINTER START_FILEgedcom  \t: START_FILE header BEGIN people familiesheader : header LEVEL restHeader\n\t\t\t  | LEVEL restHeaderrestHeader : CONTENT\n\t\t\t\t  | MULTITAGpeople : people person\n\t\t\t  | personperson :  LEVEL POINTER INDI conteudo BEGINconteudo\t\t: conteudo LEVEL restPerson\n\t\t\t\t\t| LEVEL restPerson  restPerson\t: CONTENTrestPerson    : MULTITAGfamilies : families family\n\t\t\t\t| family family : LEVEL POINTER FAM conteudoF BEGIN\n\t\t\t  | LEVEL POINTER FAM conteudoF END_FILE\n\t\t\t  | LEVEL POINTER FAM BEGIN\n\t\t\t  | LEVEL POINTER FAM END_FILEconteudoF\t\t: conteudoF LEVEL restFams\n\t\t\t\t\t\t| LEVEL restFamsrestFams\t: CONTENTrestFams    : MULTITAGmultTag\t\t: BIRTHmultTag\t\t: CHANmultTag\t\t: DEATHmultTag\t\t: CHRmultTag\t\t: BURIALmultTag\t\t: MARmultTag\t\t: GEDCmultTag  : CONT'
    
_lr_action_items = {'START_FILE':([0,],[2,]),'$end':([1,14,16,19,29,30,40,41,],[0,-1,-14,-13,-17,-18,-15,-16,]),'LEVEL':([2,3,5,7,8,9,10,11,13,14,15,16,19,22,24,26,28,29,30,31,32,33,35,36,37,38,40,41,42,43,],[4,6,12,-3,-4,-5,17,-7,-2,20,-6,-14,-13,25,27,34,39,-17,-18,-10,-11,-12,-8,-20,-21,-22,-15,-16,-9,-19,]),'BEGIN':([3,7,8,9,13,24,26,28,31,32,33,36,37,38,42,43,],[5,-3,-4,-5,-2,29,35,40,-10,-11,-12,-20,-21,-22,-9,-19,]),'CONTENT':([4,6,25,27,34,39,],[8,8,32,37,32,37,]),'MULTITAG':([4,6,25,27,34,39,],[9,9,33,38,33,38,]),'POINTER':([12,17,20,],[18,21,23,]),'INDI':([18,21,],[22,22,]),'FAM':([21,23,],[24,24,]),'END_FILE':([24,28,36,37,38,43,],[30,41,-20,-21,-22,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'gedcom':([0,],[1,]),'header':([2,],[3,]),'restHeader':([4,6,],[7,13,]),'people':([5,],[10,]),'person':([5,10,],[11,15,]),'families':([10,],[14,]),'family':([10,14,],[16,19,]),'conteudo':([22,],[26,]),'conteudoF':([24,],[28,]),'restPerson':([25,34,],[31,42,]),'restFams':([27,39,],[36,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> gedcom","S'",1,None,None,None),
  ('gedcom -> START_FILE header BEGIN people families','gedcom',5,'p_gedcom','parser.py',20),
  ('header -> header LEVEL restHeader','header',3,'p_header','parser.py',28),
  ('header -> LEVEL restHeader','header',2,'p_header','parser.py',29),
  ('restHeader -> CONTENT','restHeader',1,'p_header_rest','parser.py',33),
  ('restHeader -> MULTITAG','restHeader',1,'p_header_rest','parser.py',34),
  ('people -> people person','people',2,'p_people','parser.py',38),
  ('people -> person','people',1,'p_people','parser.py',39),
  ('person -> LEVEL POINTER INDI conteudo BEGIN','person',5,'p_person_pointer_indi','parser.py',43),
  ('conteudo -> conteudo LEVEL restPerson','conteudo',3,'p_conteudo_list','parser.py',58),
  ('conteudo -> LEVEL restPerson','conteudo',2,'p_conteudo_list','parser.py',59),
  ('restPerson -> CONTENT','restPerson',1,'p_restPerson_single','parser.py',63),
  ('restPerson -> MULTITAG','restPerson',1,'p_restPerson_mult','parser.py',100),
  ('families -> families family','families',2,'p_families','parser.py',110),
  ('families -> family','families',1,'p_families','parser.py',111),
  ('family -> LEVEL POINTER FAM conteudoF BEGIN','family',5,'p_family','parser.py',115),
  ('family -> LEVEL POINTER FAM conteudoF END_FILE','family',5,'p_family','parser.py',116),
  ('family -> LEVEL POINTER FAM BEGIN','family',4,'p_family','parser.py',117),
  ('family -> LEVEL POINTER FAM END_FILE','family',4,'p_family','parser.py',118),
  ('conteudoF -> conteudoF LEVEL restFams','conteudoF',3,'p_conteudo_fam','parser.py',129),
  ('conteudoF -> LEVEL restFams','conteudoF',2,'p_conteudo_fam','parser.py',130),
  ('restFams -> CONTENT','restFams',1,'p_restFams_single','parser.py',141),
  ('restFams -> MULTITAG','restFams',1,'p_restFams_mult','parser.py',171),
  ('multTag -> BIRTH','multTag',1,'p_multTag_birth','parser.py',181),
  ('multTag -> CHAN','multTag',1,'p_multTag_change','parser.py',188),
  ('multTag -> DEATH','multTag',1,'p_multTag_death','parser.py',195),
  ('multTag -> CHR','multTag',1,'p_multTag_chr','parser.py',202),
  ('multTag -> BURIAL','multTag',1,'p_multTag_burial','parser.py',209),
  ('multTag -> MAR','multTag',1,'p_multTag_marriage','parser.py',216),
  ('multTag -> GEDC','multTag',1,'p_multTag_gedc','parser.py',223),
  ('multTag -> CONT','multTag',1,'p_multTag_cont','parser.py',227),
]
