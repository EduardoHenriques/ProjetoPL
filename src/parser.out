Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> gedcom
Rule 1     gedcom -> START_FILE header BEGIN people families
Rule 2     header -> header LEVEL restHeader
Rule 3     header -> LEVEL restHeader
Rule 4     restHeader -> CONTENT
Rule 5     restHeader -> multTag
Rule 6     people -> people person
Rule 7     people -> person
Rule 8     person -> LEVEL POINTER INDI conteudo BEGIN
Rule 9     conteudo -> conteudo LEVEL restPerson
Rule 10    conteudo -> LEVEL restPerson
Rule 11    restPerson -> CONTENT
Rule 12    restPerson -> multTag
Rule 13    families -> families family
Rule 14    families -> family
Rule 15    family -> LEVEL POINTER FAM conteudoF BEGIN
Rule 16    family -> LEVEL POINTER FAM conteudoF END_FILE
Rule 17    family -> LEVEL POINTER FAM BEGIN
Rule 18    family -> LEVEL POINTER FAM END_FILE
Rule 19    conteudoF -> conteudoF LEVEL restFams
Rule 20    conteudoF -> LEVEL restFams
Rule 21    restFams -> CONTENT
Rule 22    restFams -> multTag
Rule 23    multTag -> BIRTH
Rule 24    multTag -> CHAN
Rule 25    multTag -> DEATH
Rule 26    multTag -> CHR
Rule 27    multTag -> BURIAL
Rule 28    multTag -> MAR
Rule 29    multTag -> GEDC
Rule 30    multTag -> CONT

Terminals, with rules where they appear

BEGIN                : 1 8 15 17
BIRTH                : 23
BURIAL               : 27
CHAN                 : 24
CHR                  : 26
CONT                 : 30
CONTENT              : 4 11 21
DEATH                : 25
END_FILE             : 16 18
FAM                  : 15 16 17 18
GEDC                 : 29
INDI                 : 8
LEVEL                : 2 3 8 9 10 15 16 17 18 19 20
MAR                  : 28
POINTER              : 8 15 16 17 18
START_FILE           : 1
error                : 

Nonterminals, with rules where they appear

conteudo             : 8 9
conteudoF            : 15 16 19
families             : 1 13
family               : 13 14
gedcom               : 0
header               : 1 2
multTag              : 5 12 22
people               : 1 6
person               : 6 7
restFams             : 19 20
restHeader           : 2 3
restPerson           : 9 10

Parsing method: LALR

state 0

    (0) S' -> . gedcom
    (1) gedcom -> . START_FILE header BEGIN people families

    START_FILE      shift and go to state 2

    gedcom                         shift and go to state 1

state 1

    (0) S' -> gedcom .



state 2

    (1) gedcom -> START_FILE . header BEGIN people families
    (2) header -> . header LEVEL restHeader
    (3) header -> . LEVEL restHeader

    LEVEL           shift and go to state 4

    header                         shift and go to state 3

state 3

    (1) gedcom -> START_FILE header . BEGIN people families
    (2) header -> header . LEVEL restHeader

    BEGIN           shift and go to state 5
    LEVEL           shift and go to state 6


state 4

    (3) header -> LEVEL . restHeader
    (4) restHeader -> . CONTENT
    (5) restHeader -> . multTag
    (23) multTag -> . BIRTH
    (24) multTag -> . CHAN
    (25) multTag -> . DEATH
    (26) multTag -> . CHR
    (27) multTag -> . BURIAL
    (28) multTag -> . MAR
    (29) multTag -> . GEDC
    (30) multTag -> . CONT

    CONTENT         shift and go to state 8
    BIRTH           shift and go to state 10
    CHAN            shift and go to state 11
    DEATH           shift and go to state 12
    CHR             shift and go to state 13
    BURIAL          shift and go to state 14
    MAR             shift and go to state 15
    GEDC            shift and go to state 16
    CONT            shift and go to state 17

    restHeader                     shift and go to state 7
    multTag                        shift and go to state 9

state 5

    (1) gedcom -> START_FILE header BEGIN . people families
    (6) people -> . people person
    (7) people -> . person
    (8) person -> . LEVEL POINTER INDI conteudo BEGIN

    LEVEL           shift and go to state 20

    people                         shift and go to state 18
    person                         shift and go to state 19

state 6

    (2) header -> header LEVEL . restHeader
    (4) restHeader -> . CONTENT
    (5) restHeader -> . multTag
    (23) multTag -> . BIRTH
    (24) multTag -> . CHAN
    (25) multTag -> . DEATH
    (26) multTag -> . CHR
    (27) multTag -> . BURIAL
    (28) multTag -> . MAR
    (29) multTag -> . GEDC
    (30) multTag -> . CONT

    CONTENT         shift and go to state 8
    BIRTH           shift and go to state 10
    CHAN            shift and go to state 11
    DEATH           shift and go to state 12
    CHR             shift and go to state 13
    BURIAL          shift and go to state 14
    MAR             shift and go to state 15
    GEDC            shift and go to state 16
    CONT            shift and go to state 17

    restHeader                     shift and go to state 21
    multTag                        shift and go to state 9

state 7

    (3) header -> LEVEL restHeader .

    BEGIN           reduce using rule 3 (header -> LEVEL restHeader .)
    LEVEL           reduce using rule 3 (header -> LEVEL restHeader .)


state 8

    (4) restHeader -> CONTENT .

    BEGIN           reduce using rule 4 (restHeader -> CONTENT .)
    LEVEL           reduce using rule 4 (restHeader -> CONTENT .)


state 9

    (5) restHeader -> multTag .

    BEGIN           reduce using rule 5 (restHeader -> multTag .)
    LEVEL           reduce using rule 5 (restHeader -> multTag .)


state 10

    (23) multTag -> BIRTH .

    BEGIN           reduce using rule 23 (multTag -> BIRTH .)
    LEVEL           reduce using rule 23 (multTag -> BIRTH .)
    END_FILE        reduce using rule 23 (multTag -> BIRTH .)


state 11

    (24) multTag -> CHAN .

    BEGIN           reduce using rule 24 (multTag -> CHAN .)
    LEVEL           reduce using rule 24 (multTag -> CHAN .)
    END_FILE        reduce using rule 24 (multTag -> CHAN .)


state 12

    (25) multTag -> DEATH .

    BEGIN           reduce using rule 25 (multTag -> DEATH .)
    LEVEL           reduce using rule 25 (multTag -> DEATH .)
    END_FILE        reduce using rule 25 (multTag -> DEATH .)


state 13

    (26) multTag -> CHR .

    BEGIN           reduce using rule 26 (multTag -> CHR .)
    LEVEL           reduce using rule 26 (multTag -> CHR .)
    END_FILE        reduce using rule 26 (multTag -> CHR .)


state 14

    (27) multTag -> BURIAL .

    BEGIN           reduce using rule 27 (multTag -> BURIAL .)
    LEVEL           reduce using rule 27 (multTag -> BURIAL .)
    END_FILE        reduce using rule 27 (multTag -> BURIAL .)


state 15

    (28) multTag -> MAR .

    BEGIN           reduce using rule 28 (multTag -> MAR .)
    LEVEL           reduce using rule 28 (multTag -> MAR .)
    END_FILE        reduce using rule 28 (multTag -> MAR .)


state 16

    (29) multTag -> GEDC .

    BEGIN           reduce using rule 29 (multTag -> GEDC .)
    LEVEL           reduce using rule 29 (multTag -> GEDC .)
    END_FILE        reduce using rule 29 (multTag -> GEDC .)


state 17

    (30) multTag -> CONT .

    BEGIN           reduce using rule 30 (multTag -> CONT .)
    LEVEL           reduce using rule 30 (multTag -> CONT .)
    END_FILE        reduce using rule 30 (multTag -> CONT .)


state 18

    (1) gedcom -> START_FILE header BEGIN people . families
    (6) people -> people . person
    (13) families -> . families family
    (14) families -> . family
    (8) person -> . LEVEL POINTER INDI conteudo BEGIN
    (15) family -> . LEVEL POINTER FAM conteudoF BEGIN
    (16) family -> . LEVEL POINTER FAM conteudoF END_FILE
    (17) family -> . LEVEL POINTER FAM BEGIN
    (18) family -> . LEVEL POINTER FAM END_FILE

    LEVEL           shift and go to state 25

    families                       shift and go to state 22
    person                         shift and go to state 23
    family                         shift and go to state 24

state 19

    (7) people -> person .

    LEVEL           reduce using rule 7 (people -> person .)


state 20

    (8) person -> LEVEL . POINTER INDI conteudo BEGIN

    POINTER         shift and go to state 26


state 21

    (2) header -> header LEVEL restHeader .

    BEGIN           reduce using rule 2 (header -> header LEVEL restHeader .)
    LEVEL           reduce using rule 2 (header -> header LEVEL restHeader .)


state 22

    (1) gedcom -> START_FILE header BEGIN people families .
    (13) families -> families . family
    (15) family -> . LEVEL POINTER FAM conteudoF BEGIN
    (16) family -> . LEVEL POINTER FAM conteudoF END_FILE
    (17) family -> . LEVEL POINTER FAM BEGIN
    (18) family -> . LEVEL POINTER FAM END_FILE

    $end            reduce using rule 1 (gedcom -> START_FILE header BEGIN people families .)
    LEVEL           shift and go to state 28

    family                         shift and go to state 27

state 23

    (6) people -> people person .

    LEVEL           reduce using rule 6 (people -> people person .)


state 24

    (14) families -> family .

    LEVEL           reduce using rule 14 (families -> family .)
    $end            reduce using rule 14 (families -> family .)


state 25

    (8) person -> LEVEL . POINTER INDI conteudo BEGIN
    (15) family -> LEVEL . POINTER FAM conteudoF BEGIN
    (16) family -> LEVEL . POINTER FAM conteudoF END_FILE
    (17) family -> LEVEL . POINTER FAM BEGIN
    (18) family -> LEVEL . POINTER FAM END_FILE

    POINTER         shift and go to state 29


state 26

    (8) person -> LEVEL POINTER . INDI conteudo BEGIN

    INDI            shift and go to state 30


state 27

    (13) families -> families family .

    LEVEL           reduce using rule 13 (families -> families family .)
    $end            reduce using rule 13 (families -> families family .)


state 28

    (15) family -> LEVEL . POINTER FAM conteudoF BEGIN
    (16) family -> LEVEL . POINTER FAM conteudoF END_FILE
    (17) family -> LEVEL . POINTER FAM BEGIN
    (18) family -> LEVEL . POINTER FAM END_FILE

    POINTER         shift and go to state 31


state 29

    (8) person -> LEVEL POINTER . INDI conteudo BEGIN
    (15) family -> LEVEL POINTER . FAM conteudoF BEGIN
    (16) family -> LEVEL POINTER . FAM conteudoF END_FILE
    (17) family -> LEVEL POINTER . FAM BEGIN
    (18) family -> LEVEL POINTER . FAM END_FILE

    INDI            shift and go to state 30
    FAM             shift and go to state 32


state 30

    (8) person -> LEVEL POINTER INDI . conteudo BEGIN
    (9) conteudo -> . conteudo LEVEL restPerson
    (10) conteudo -> . LEVEL restPerson

    LEVEL           shift and go to state 33

    conteudo                       shift and go to state 34

state 31

    (15) family -> LEVEL POINTER . FAM conteudoF BEGIN
    (16) family -> LEVEL POINTER . FAM conteudoF END_FILE
    (17) family -> LEVEL POINTER . FAM BEGIN
    (18) family -> LEVEL POINTER . FAM END_FILE

    FAM             shift and go to state 32


state 32

    (15) family -> LEVEL POINTER FAM . conteudoF BEGIN
    (16) family -> LEVEL POINTER FAM . conteudoF END_FILE
    (17) family -> LEVEL POINTER FAM . BEGIN
    (18) family -> LEVEL POINTER FAM . END_FILE
    (19) conteudoF -> . conteudoF LEVEL restFams
    (20) conteudoF -> . LEVEL restFams

    BEGIN           shift and go to state 37
    END_FILE        shift and go to state 38
    LEVEL           shift and go to state 35

    conteudoF                      shift and go to state 36

state 33

    (10) conteudo -> LEVEL . restPerson
    (11) restPerson -> . CONTENT
    (12) restPerson -> . multTag
    (23) multTag -> . BIRTH
    (24) multTag -> . CHAN
    (25) multTag -> . DEATH
    (26) multTag -> . CHR
    (27) multTag -> . BURIAL
    (28) multTag -> . MAR
    (29) multTag -> . GEDC
    (30) multTag -> . CONT

    CONTENT         shift and go to state 40
    BIRTH           shift and go to state 10
    CHAN            shift and go to state 11
    DEATH           shift and go to state 12
    CHR             shift and go to state 13
    BURIAL          shift and go to state 14
    MAR             shift and go to state 15
    GEDC            shift and go to state 16
    CONT            shift and go to state 17

    restPerson                     shift and go to state 39
    multTag                        shift and go to state 41

state 34

    (8) person -> LEVEL POINTER INDI conteudo . BEGIN
    (9) conteudo -> conteudo . LEVEL restPerson

    BEGIN           shift and go to state 43
    LEVEL           shift and go to state 42


state 35

    (20) conteudoF -> LEVEL . restFams
    (21) restFams -> . CONTENT
    (22) restFams -> . multTag
    (23) multTag -> . BIRTH
    (24) multTag -> . CHAN
    (25) multTag -> . DEATH
    (26) multTag -> . CHR
    (27) multTag -> . BURIAL
    (28) multTag -> . MAR
    (29) multTag -> . GEDC
    (30) multTag -> . CONT

    CONTENT         shift and go to state 45
    BIRTH           shift and go to state 10
    CHAN            shift and go to state 11
    DEATH           shift and go to state 12
    CHR             shift and go to state 13
    BURIAL          shift and go to state 14
    MAR             shift and go to state 15
    GEDC            shift and go to state 16
    CONT            shift and go to state 17

    restFams                       shift and go to state 44
    multTag                        shift and go to state 46

state 36

    (15) family -> LEVEL POINTER FAM conteudoF . BEGIN
    (16) family -> LEVEL POINTER FAM conteudoF . END_FILE
    (19) conteudoF -> conteudoF . LEVEL restFams

    BEGIN           shift and go to state 48
    END_FILE        shift and go to state 49
    LEVEL           shift and go to state 47


state 37

    (17) family -> LEVEL POINTER FAM BEGIN .

    LEVEL           reduce using rule 17 (family -> LEVEL POINTER FAM BEGIN .)
    $end            reduce using rule 17 (family -> LEVEL POINTER FAM BEGIN .)


state 38

    (18) family -> LEVEL POINTER FAM END_FILE .

    LEVEL           reduce using rule 18 (family -> LEVEL POINTER FAM END_FILE .)
    $end            reduce using rule 18 (family -> LEVEL POINTER FAM END_FILE .)


state 39

    (10) conteudo -> LEVEL restPerson .

    BEGIN           reduce using rule 10 (conteudo -> LEVEL restPerson .)
    LEVEL           reduce using rule 10 (conteudo -> LEVEL restPerson .)


state 40

    (11) restPerson -> CONTENT .

    BEGIN           reduce using rule 11 (restPerson -> CONTENT .)
    LEVEL           reduce using rule 11 (restPerson -> CONTENT .)


state 41

    (12) restPerson -> multTag .

    BEGIN           reduce using rule 12 (restPerson -> multTag .)
    LEVEL           reduce using rule 12 (restPerson -> multTag .)


state 42

    (9) conteudo -> conteudo LEVEL . restPerson
    (11) restPerson -> . CONTENT
    (12) restPerson -> . multTag
    (23) multTag -> . BIRTH
    (24) multTag -> . CHAN
    (25) multTag -> . DEATH
    (26) multTag -> . CHR
    (27) multTag -> . BURIAL
    (28) multTag -> . MAR
    (29) multTag -> . GEDC
    (30) multTag -> . CONT

    CONTENT         shift and go to state 40
    BIRTH           shift and go to state 10
    CHAN            shift and go to state 11
    DEATH           shift and go to state 12
    CHR             shift and go to state 13
    BURIAL          shift and go to state 14
    MAR             shift and go to state 15
    GEDC            shift and go to state 16
    CONT            shift and go to state 17

    restPerson                     shift and go to state 50
    multTag                        shift and go to state 41

state 43

    (8) person -> LEVEL POINTER INDI conteudo BEGIN .

    LEVEL           reduce using rule 8 (person -> LEVEL POINTER INDI conteudo BEGIN .)


state 44

    (20) conteudoF -> LEVEL restFams .

    BEGIN           reduce using rule 20 (conteudoF -> LEVEL restFams .)
    END_FILE        reduce using rule 20 (conteudoF -> LEVEL restFams .)
    LEVEL           reduce using rule 20 (conteudoF -> LEVEL restFams .)


state 45

    (21) restFams -> CONTENT .

    BEGIN           reduce using rule 21 (restFams -> CONTENT .)
    END_FILE        reduce using rule 21 (restFams -> CONTENT .)
    LEVEL           reduce using rule 21 (restFams -> CONTENT .)


state 46

    (22) restFams -> multTag .

    BEGIN           reduce using rule 22 (restFams -> multTag .)
    END_FILE        reduce using rule 22 (restFams -> multTag .)
    LEVEL           reduce using rule 22 (restFams -> multTag .)


state 47

    (19) conteudoF -> conteudoF LEVEL . restFams
    (21) restFams -> . CONTENT
    (22) restFams -> . multTag
    (23) multTag -> . BIRTH
    (24) multTag -> . CHAN
    (25) multTag -> . DEATH
    (26) multTag -> . CHR
    (27) multTag -> . BURIAL
    (28) multTag -> . MAR
    (29) multTag -> . GEDC
    (30) multTag -> . CONT

    CONTENT         shift and go to state 45
    BIRTH           shift and go to state 10
    CHAN            shift and go to state 11
    DEATH           shift and go to state 12
    CHR             shift and go to state 13
    BURIAL          shift and go to state 14
    MAR             shift and go to state 15
    GEDC            shift and go to state 16
    CONT            shift and go to state 17

    restFams                       shift and go to state 51
    multTag                        shift and go to state 46

state 48

    (15) family -> LEVEL POINTER FAM conteudoF BEGIN .

    LEVEL           reduce using rule 15 (family -> LEVEL POINTER FAM conteudoF BEGIN .)
    $end            reduce using rule 15 (family -> LEVEL POINTER FAM conteudoF BEGIN .)


state 49

    (16) family -> LEVEL POINTER FAM conteudoF END_FILE .

    LEVEL           reduce using rule 16 (family -> LEVEL POINTER FAM conteudoF END_FILE .)
    $end            reduce using rule 16 (family -> LEVEL POINTER FAM conteudoF END_FILE .)


state 50

    (9) conteudo -> conteudo LEVEL restPerson .

    BEGIN           reduce using rule 9 (conteudo -> conteudo LEVEL restPerson .)
    LEVEL           reduce using rule 9 (conteudo -> conteudo LEVEL restPerson .)


state 51

    (19) conteudoF -> conteudoF LEVEL restFams .

    BEGIN           reduce using rule 19 (conteudoF -> conteudoF LEVEL restFams .)
    END_FILE        reduce using rule 19 (conteudoF -> conteudoF LEVEL restFams .)
    LEVEL           reduce using rule 19 (conteudoF -> conteudoF LEVEL restFams .)

