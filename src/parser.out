Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADDR
    ADDRESS
    ALIAS
    BARRA
    CHAR
    CHILD
    COMM
    CONT
    DATE
    DEST
    DIV
    FAMC
    FAMS
    FILE
    HEAD
    HUSBAND
    ID
    NAME
    PHONE
    PLACE
    REFN
    SEX
    SOUR
    TITLE
    WIFE

Grammar

Rule 0     S' -> gedcom
Rule 1     gedcom -> START_FILE header BEGIN people families
Rule 2     header -> header LEVEL CONTENT
Rule 3     header -> LEVEL CONTENT
Rule 4     people -> people person
Rule 5     people -> person
Rule 6     person -> LEVEL POINTER INDI conteudo BEGIN
Rule 7     conteudo -> conteudo LEVEL restPerson
Rule 8     conteudo -> LEVEL restPerson
Rule 9     restPerson -> CONTENT
Rule 10    restPerson -> multTag
Rule 11    families -> families family
Rule 12    families -> family
Rule 13    family -> LEVEL POINTER FAM conteudoF BEGIN
Rule 14    family -> LEVEL POINTER FAM conteudoF END_FILE
Rule 15    conteudoF -> conteudoF LEVEL restFams
Rule 16    conteudoF -> LEVEL restFams
Rule 17    restFams -> CONTENT
Rule 18    restFams -> multTag
Rule 19    end -> LEVEL TRLR
Rule 20    multTag -> BIRTH
Rule 21    multTag -> DEATH
Rule 22    multTag -> CHR
Rule 23    multTag -> BURIAL
Rule 24    multTag -> MAR

Terminals, with rules where they appear

ADDR                 : 
ADDRESS              : 
ALIAS                : 
BARRA                : 
BEGIN                : 1 6 13
BIRTH                : 20
BURIAL               : 23
CHAR                 : 
CHILD                : 
CHR                  : 22
COMM                 : 
CONT                 : 
CONTENT              : 2 3 9 17
DATE                 : 
DEATH                : 21
DEST                 : 
DIV                  : 
END_FILE             : 14
FAM                  : 13 14
FAMC                 : 
FAMS                 : 
FILE                 : 
HEAD                 : 
HUSBAND              : 
ID                   : 
INDI                 : 6
LEVEL                : 2 3 6 7 8 13 14 15 16 19
MAR                  : 24
NAME                 : 
PHONE                : 
PLACE                : 
POINTER              : 6 13 14
REFN                 : 
SEX                  : 
SOUR                 : 
START_FILE           : 1
TITLE                : 
TRLR                 : 19
WIFE                 : 
error                : 

Nonterminals, with rules where they appear

conteudo             : 6 7
conteudoF            : 13 14 15
end                  : 
families             : 1 11
family               : 11 12
gedcom               : 0
header               : 1 2
multTag              : 10 18
people               : 1 4
person               : 4 5
restFams             : 15 16
restPerson           : 7 8

Parsing method: LALR

state 0

    (0) S' -> . gedcom
    (1) gedcom -> . START_FILE header BEGIN people families

    START_FILE      shift and go to state 2

    gedcom                         shift and go to state 1

state 1

    (0) S' -> gedcom .



state 2

    (1) gedcom -> START_FILE . header BEGIN people families
    (2) header -> . header LEVEL CONTENT
    (3) header -> . LEVEL CONTENT

    LEVEL           shift and go to state 4

    header                         shift and go to state 3

state 3

    (1) gedcom -> START_FILE header . BEGIN people families
    (2) header -> header . LEVEL CONTENT

    BEGIN           shift and go to state 5
    LEVEL           shift and go to state 6


state 4

    (3) header -> LEVEL . CONTENT

    CONTENT         shift and go to state 7


state 5

    (1) gedcom -> START_FILE header BEGIN . people families
    (4) people -> . people person
    (5) people -> . person
    (6) person -> . LEVEL POINTER INDI conteudo BEGIN

    LEVEL           shift and go to state 10

    people                         shift and go to state 8
    person                         shift and go to state 9

state 6

    (2) header -> header LEVEL . CONTENT

    CONTENT         shift and go to state 11


state 7

    (3) header -> LEVEL CONTENT .

    BEGIN           reduce using rule 3 (header -> LEVEL CONTENT .)
    LEVEL           reduce using rule 3 (header -> LEVEL CONTENT .)


state 8

    (1) gedcom -> START_FILE header BEGIN people . families
    (4) people -> people . person
    (11) families -> . families family
    (12) families -> . family
    (6) person -> . LEVEL POINTER INDI conteudo BEGIN
    (13) family -> . LEVEL POINTER FAM conteudoF BEGIN
    (14) family -> . LEVEL POINTER FAM conteudoF END_FILE

    LEVEL           shift and go to state 15

    families                       shift and go to state 12
    person                         shift and go to state 13
    family                         shift and go to state 14

state 9

    (5) people -> person .

    LEVEL           reduce using rule 5 (people -> person .)


state 10

    (6) person -> LEVEL . POINTER INDI conteudo BEGIN

    POINTER         shift and go to state 16


state 11

    (2) header -> header LEVEL CONTENT .

    BEGIN           reduce using rule 2 (header -> header LEVEL CONTENT .)
    LEVEL           reduce using rule 2 (header -> header LEVEL CONTENT .)


state 12

    (1) gedcom -> START_FILE header BEGIN people families .
    (11) families -> families . family
    (13) family -> . LEVEL POINTER FAM conteudoF BEGIN
    (14) family -> . LEVEL POINTER FAM conteudoF END_FILE

    $end            reduce using rule 1 (gedcom -> START_FILE header BEGIN people families .)
    LEVEL           shift and go to state 18

    family                         shift and go to state 17

state 13

    (4) people -> people person .

    LEVEL           reduce using rule 4 (people -> people person .)


state 14

    (12) families -> family .

    LEVEL           reduce using rule 12 (families -> family .)
    $end            reduce using rule 12 (families -> family .)


state 15

    (6) person -> LEVEL . POINTER INDI conteudo BEGIN
    (13) family -> LEVEL . POINTER FAM conteudoF BEGIN
    (14) family -> LEVEL . POINTER FAM conteudoF END_FILE

    POINTER         shift and go to state 19


state 16

    (6) person -> LEVEL POINTER . INDI conteudo BEGIN

    INDI            shift and go to state 20


state 17

    (11) families -> families family .

    LEVEL           reduce using rule 11 (families -> families family .)
    $end            reduce using rule 11 (families -> families family .)


state 18

    (13) family -> LEVEL . POINTER FAM conteudoF BEGIN
    (14) family -> LEVEL . POINTER FAM conteudoF END_FILE

    POINTER         shift and go to state 21


state 19

    (6) person -> LEVEL POINTER . INDI conteudo BEGIN
    (13) family -> LEVEL POINTER . FAM conteudoF BEGIN
    (14) family -> LEVEL POINTER . FAM conteudoF END_FILE

    INDI            shift and go to state 20
    FAM             shift and go to state 22


state 20

    (6) person -> LEVEL POINTER INDI . conteudo BEGIN
    (7) conteudo -> . conteudo LEVEL restPerson
    (8) conteudo -> . LEVEL restPerson

    LEVEL           shift and go to state 23

    conteudo                       shift and go to state 24

state 21

    (13) family -> LEVEL POINTER . FAM conteudoF BEGIN
    (14) family -> LEVEL POINTER . FAM conteudoF END_FILE

    FAM             shift and go to state 22


state 22

    (13) family -> LEVEL POINTER FAM . conteudoF BEGIN
    (14) family -> LEVEL POINTER FAM . conteudoF END_FILE
    (15) conteudoF -> . conteudoF LEVEL restFams
    (16) conteudoF -> . LEVEL restFams

    LEVEL           shift and go to state 25

    conteudoF                      shift and go to state 26

state 23

    (8) conteudo -> LEVEL . restPerson
    (9) restPerson -> . CONTENT
    (10) restPerson -> . multTag
    (20) multTag -> . BIRTH
    (21) multTag -> . DEATH
    (22) multTag -> . CHR
    (23) multTag -> . BURIAL
    (24) multTag -> . MAR

    CONTENT         shift and go to state 28
    BIRTH           shift and go to state 30
    DEATH           shift and go to state 31
    CHR             shift and go to state 32
    BURIAL          shift and go to state 33
    MAR             shift and go to state 34

    restPerson                     shift and go to state 27
    multTag                        shift and go to state 29

state 24

    (6) person -> LEVEL POINTER INDI conteudo . BEGIN
    (7) conteudo -> conteudo . LEVEL restPerson

    BEGIN           shift and go to state 36
    LEVEL           shift and go to state 35


state 25

    (16) conteudoF -> LEVEL . restFams
    (17) restFams -> . CONTENT
    (18) restFams -> . multTag
    (20) multTag -> . BIRTH
    (21) multTag -> . DEATH
    (22) multTag -> . CHR
    (23) multTag -> . BURIAL
    (24) multTag -> . MAR

    CONTENT         shift and go to state 38
    BIRTH           shift and go to state 30
    DEATH           shift and go to state 31
    CHR             shift and go to state 32
    BURIAL          shift and go to state 33
    MAR             shift and go to state 34

    restFams                       shift and go to state 37
    multTag                        shift and go to state 39

state 26

    (13) family -> LEVEL POINTER FAM conteudoF . BEGIN
    (14) family -> LEVEL POINTER FAM conteudoF . END_FILE
    (15) conteudoF -> conteudoF . LEVEL restFams

    BEGIN           shift and go to state 41
    END_FILE        shift and go to state 42
    LEVEL           shift and go to state 40


state 27

    (8) conteudo -> LEVEL restPerson .

    BEGIN           reduce using rule 8 (conteudo -> LEVEL restPerson .)
    LEVEL           reduce using rule 8 (conteudo -> LEVEL restPerson .)


state 28

    (9) restPerson -> CONTENT .

    BEGIN           reduce using rule 9 (restPerson -> CONTENT .)
    LEVEL           reduce using rule 9 (restPerson -> CONTENT .)


state 29

    (10) restPerson -> multTag .

    BEGIN           reduce using rule 10 (restPerson -> multTag .)
    LEVEL           reduce using rule 10 (restPerson -> multTag .)


state 30

    (20) multTag -> BIRTH .

    BEGIN           reduce using rule 20 (multTag -> BIRTH .)
    LEVEL           reduce using rule 20 (multTag -> BIRTH .)
    END_FILE        reduce using rule 20 (multTag -> BIRTH .)


state 31

    (21) multTag -> DEATH .

    BEGIN           reduce using rule 21 (multTag -> DEATH .)
    LEVEL           reduce using rule 21 (multTag -> DEATH .)
    END_FILE        reduce using rule 21 (multTag -> DEATH .)


state 32

    (22) multTag -> CHR .

    BEGIN           reduce using rule 22 (multTag -> CHR .)
    LEVEL           reduce using rule 22 (multTag -> CHR .)
    END_FILE        reduce using rule 22 (multTag -> CHR .)


state 33

    (23) multTag -> BURIAL .

    BEGIN           reduce using rule 23 (multTag -> BURIAL .)
    LEVEL           reduce using rule 23 (multTag -> BURIAL .)
    END_FILE        reduce using rule 23 (multTag -> BURIAL .)


state 34

    (24) multTag -> MAR .

    BEGIN           reduce using rule 24 (multTag -> MAR .)
    LEVEL           reduce using rule 24 (multTag -> MAR .)
    END_FILE        reduce using rule 24 (multTag -> MAR .)


state 35

    (7) conteudo -> conteudo LEVEL . restPerson
    (9) restPerson -> . CONTENT
    (10) restPerson -> . multTag
    (20) multTag -> . BIRTH
    (21) multTag -> . DEATH
    (22) multTag -> . CHR
    (23) multTag -> . BURIAL
    (24) multTag -> . MAR

    CONTENT         shift and go to state 28
    BIRTH           shift and go to state 30
    DEATH           shift and go to state 31
    CHR             shift and go to state 32
    BURIAL          shift and go to state 33
    MAR             shift and go to state 34

    restPerson                     shift and go to state 43
    multTag                        shift and go to state 29

state 36

    (6) person -> LEVEL POINTER INDI conteudo BEGIN .

    LEVEL           reduce using rule 6 (person -> LEVEL POINTER INDI conteudo BEGIN .)


state 37

    (16) conteudoF -> LEVEL restFams .

    BEGIN           reduce using rule 16 (conteudoF -> LEVEL restFams .)
    END_FILE        reduce using rule 16 (conteudoF -> LEVEL restFams .)
    LEVEL           reduce using rule 16 (conteudoF -> LEVEL restFams .)


state 38

    (17) restFams -> CONTENT .

    BEGIN           reduce using rule 17 (restFams -> CONTENT .)
    END_FILE        reduce using rule 17 (restFams -> CONTENT .)
    LEVEL           reduce using rule 17 (restFams -> CONTENT .)


state 39

    (18) restFams -> multTag .

    BEGIN           reduce using rule 18 (restFams -> multTag .)
    END_FILE        reduce using rule 18 (restFams -> multTag .)
    LEVEL           reduce using rule 18 (restFams -> multTag .)


state 40

    (15) conteudoF -> conteudoF LEVEL . restFams
    (17) restFams -> . CONTENT
    (18) restFams -> . multTag
    (20) multTag -> . BIRTH
    (21) multTag -> . DEATH
    (22) multTag -> . CHR
    (23) multTag -> . BURIAL
    (24) multTag -> . MAR

    CONTENT         shift and go to state 38
    BIRTH           shift and go to state 30
    DEATH           shift and go to state 31
    CHR             shift and go to state 32
    BURIAL          shift and go to state 33
    MAR             shift and go to state 34

    restFams                       shift and go to state 44
    multTag                        shift and go to state 39

state 41

    (13) family -> LEVEL POINTER FAM conteudoF BEGIN .

    LEVEL           reduce using rule 13 (family -> LEVEL POINTER FAM conteudoF BEGIN .)
    $end            reduce using rule 13 (family -> LEVEL POINTER FAM conteudoF BEGIN .)


state 42

    (14) family -> LEVEL POINTER FAM conteudoF END_FILE .

    LEVEL           reduce using rule 14 (family -> LEVEL POINTER FAM conteudoF END_FILE .)
    $end            reduce using rule 14 (family -> LEVEL POINTER FAM conteudoF END_FILE .)


state 43

    (7) conteudo -> conteudo LEVEL restPerson .

    BEGIN           reduce using rule 7 (conteudo -> conteudo LEVEL restPerson .)
    LEVEL           reduce using rule 7 (conteudo -> conteudo LEVEL restPerson .)


state 44

    (15) conteudoF -> conteudoF LEVEL restFams .

    BEGIN           reduce using rule 15 (conteudoF -> conteudoF LEVEL restFams .)
    END_FILE        reduce using rule 15 (conteudoF -> conteudoF LEVEL restFams .)
    LEVEL           reduce using rule 15 (conteudoF -> conteudoF LEVEL restFams .)

