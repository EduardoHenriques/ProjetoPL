Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> gedcom
Rule 1     gedcom -> START_FILE header BEGIN people families
Rule 2     header -> header LEVEL restHeader
Rule 3     header -> LEVEL restHeader
Rule 4     restHeader -> CONTENT
Rule 5     restHeader -> MULTITAG
Rule 6     people -> people person
Rule 7     people -> person
Rule 8     person -> LEVEL POINTER INDI conteudo BEGIN
Rule 9     conteudo -> conteudo LEVEL restPerson
Rule 10    conteudo -> LEVEL restPerson
Rule 11    restPerson -> CONTENT
Rule 12    restPerson -> MULTITAG
Rule 13    families -> families family
Rule 14    families -> family
Rule 15    family -> LEVEL POINTER FAM conteudoF BEGIN
Rule 16    family -> LEVEL POINTER FAM conteudoF END_FILE
Rule 17    family -> LEVEL POINTER FAM BEGIN
Rule 18    family -> LEVEL POINTER FAM END_FILE
Rule 19    conteudoF -> conteudoF LEVEL restFams
Rule 20    conteudoF -> LEVEL restFams
Rule 21    restFams -> CONTENT
Rule 22    restFams -> MULTITAG
Rule 23    multTag -> BIRTH
Rule 24    multTag -> CHAN
Rule 25    multTag -> DEATH
Rule 26    multTag -> CHR
Rule 27    multTag -> BURIAL
Rule 28    multTag -> MAR
Rule 29    multTag -> GEDC
Rule 30    multTag -> CONT

Terminals, with rules where they appear

BEGIN                : 1 8 15 17
BIRTH                : 23
BURIAL               : 27
CHAN                 : 24
CHR                  : 26
CONT                 : 30
CONTENT              : 4 11 21
DEATH                : 25
END_FILE             : 16 18
FAM                  : 15 16 17 18
GEDC                 : 29
INDI                 : 8
LEVEL                : 2 3 8 9 10 15 16 17 18 19 20
MAR                  : 28
MULTITAG             : 5 12 22
POINTER              : 8 15 16 17 18
START_FILE           : 1
error                : 

Nonterminals, with rules where they appear

conteudo             : 8 9
conteudoF            : 15 16 19
families             : 1 13
family               : 13 14
gedcom               : 0
header               : 1 2
multTag              : 
people               : 1 6
person               : 6 7
restFams             : 19 20
restHeader           : 2 3
restPerson           : 9 10

Parsing method: LALR

state 0

    (0) S' -> . gedcom
    (1) gedcom -> . START_FILE header BEGIN people families

    START_FILE      shift and go to state 2

    gedcom                         shift and go to state 1

state 1

    (0) S' -> gedcom .



state 2

    (1) gedcom -> START_FILE . header BEGIN people families
    (2) header -> . header LEVEL restHeader
    (3) header -> . LEVEL restHeader

    LEVEL           shift and go to state 4

    header                         shift and go to state 3

state 3

    (1) gedcom -> START_FILE header . BEGIN people families
    (2) header -> header . LEVEL restHeader

    BEGIN           shift and go to state 5
    LEVEL           shift and go to state 6


state 4

    (3) header -> LEVEL . restHeader
    (4) restHeader -> . CONTENT
    (5) restHeader -> . MULTITAG

    CONTENT         shift and go to state 8
    MULTITAG        shift and go to state 9

    restHeader                     shift and go to state 7

state 5

    (1) gedcom -> START_FILE header BEGIN . people families
    (6) people -> . people person
    (7) people -> . person
    (8) person -> . LEVEL POINTER INDI conteudo BEGIN

    LEVEL           shift and go to state 12

    people                         shift and go to state 10
    person                         shift and go to state 11

state 6

    (2) header -> header LEVEL . restHeader
    (4) restHeader -> . CONTENT
    (5) restHeader -> . MULTITAG

    CONTENT         shift and go to state 8
    MULTITAG        shift and go to state 9

    restHeader                     shift and go to state 13

state 7

    (3) header -> LEVEL restHeader .

    BEGIN           reduce using rule 3 (header -> LEVEL restHeader .)
    LEVEL           reduce using rule 3 (header -> LEVEL restHeader .)


state 8

    (4) restHeader -> CONTENT .

    BEGIN           reduce using rule 4 (restHeader -> CONTENT .)
    LEVEL           reduce using rule 4 (restHeader -> CONTENT .)


state 9

    (5) restHeader -> MULTITAG .

    BEGIN           reduce using rule 5 (restHeader -> MULTITAG .)
    LEVEL           reduce using rule 5 (restHeader -> MULTITAG .)


state 10

    (1) gedcom -> START_FILE header BEGIN people . families
    (6) people -> people . person
    (13) families -> . families family
    (14) families -> . family
    (8) person -> . LEVEL POINTER INDI conteudo BEGIN
    (15) family -> . LEVEL POINTER FAM conteudoF BEGIN
    (16) family -> . LEVEL POINTER FAM conteudoF END_FILE
    (17) family -> . LEVEL POINTER FAM BEGIN
    (18) family -> . LEVEL POINTER FAM END_FILE

    LEVEL           shift and go to state 17

    families                       shift and go to state 14
    person                         shift and go to state 15
    family                         shift and go to state 16

state 11

    (7) people -> person .

    LEVEL           reduce using rule 7 (people -> person .)


state 12

    (8) person -> LEVEL . POINTER INDI conteudo BEGIN

    POINTER         shift and go to state 18


state 13

    (2) header -> header LEVEL restHeader .

    BEGIN           reduce using rule 2 (header -> header LEVEL restHeader .)
    LEVEL           reduce using rule 2 (header -> header LEVEL restHeader .)


state 14

    (1) gedcom -> START_FILE header BEGIN people families .
    (13) families -> families . family
    (15) family -> . LEVEL POINTER FAM conteudoF BEGIN
    (16) family -> . LEVEL POINTER FAM conteudoF END_FILE
    (17) family -> . LEVEL POINTER FAM BEGIN
    (18) family -> . LEVEL POINTER FAM END_FILE

    $end            reduce using rule 1 (gedcom -> START_FILE header BEGIN people families .)
    LEVEL           shift and go to state 20

    family                         shift and go to state 19

state 15

    (6) people -> people person .

    LEVEL           reduce using rule 6 (people -> people person .)


state 16

    (14) families -> family .

    LEVEL           reduce using rule 14 (families -> family .)
    $end            reduce using rule 14 (families -> family .)


state 17

    (8) person -> LEVEL . POINTER INDI conteudo BEGIN
    (15) family -> LEVEL . POINTER FAM conteudoF BEGIN
    (16) family -> LEVEL . POINTER FAM conteudoF END_FILE
    (17) family -> LEVEL . POINTER FAM BEGIN
    (18) family -> LEVEL . POINTER FAM END_FILE

    POINTER         shift and go to state 21


state 18

    (8) person -> LEVEL POINTER . INDI conteudo BEGIN

    INDI            shift and go to state 22


state 19

    (13) families -> families family .

    LEVEL           reduce using rule 13 (families -> families family .)
    $end            reduce using rule 13 (families -> families family .)


state 20

    (15) family -> LEVEL . POINTER FAM conteudoF BEGIN
    (16) family -> LEVEL . POINTER FAM conteudoF END_FILE
    (17) family -> LEVEL . POINTER FAM BEGIN
    (18) family -> LEVEL . POINTER FAM END_FILE

    POINTER         shift and go to state 23


state 21

    (8) person -> LEVEL POINTER . INDI conteudo BEGIN
    (15) family -> LEVEL POINTER . FAM conteudoF BEGIN
    (16) family -> LEVEL POINTER . FAM conteudoF END_FILE
    (17) family -> LEVEL POINTER . FAM BEGIN
    (18) family -> LEVEL POINTER . FAM END_FILE

    INDI            shift and go to state 22
    FAM             shift and go to state 24


state 22

    (8) person -> LEVEL POINTER INDI . conteudo BEGIN
    (9) conteudo -> . conteudo LEVEL restPerson
    (10) conteudo -> . LEVEL restPerson

    LEVEL           shift and go to state 25

    conteudo                       shift and go to state 26

state 23

    (15) family -> LEVEL POINTER . FAM conteudoF BEGIN
    (16) family -> LEVEL POINTER . FAM conteudoF END_FILE
    (17) family -> LEVEL POINTER . FAM BEGIN
    (18) family -> LEVEL POINTER . FAM END_FILE

    FAM             shift and go to state 24


state 24

    (15) family -> LEVEL POINTER FAM . conteudoF BEGIN
    (16) family -> LEVEL POINTER FAM . conteudoF END_FILE
    (17) family -> LEVEL POINTER FAM . BEGIN
    (18) family -> LEVEL POINTER FAM . END_FILE
    (19) conteudoF -> . conteudoF LEVEL restFams
    (20) conteudoF -> . LEVEL restFams

    BEGIN           shift and go to state 29
    END_FILE        shift and go to state 30
    LEVEL           shift and go to state 27

    conteudoF                      shift and go to state 28

state 25

    (10) conteudo -> LEVEL . restPerson
    (11) restPerson -> . CONTENT
    (12) restPerson -> . MULTITAG

    CONTENT         shift and go to state 32
    MULTITAG        shift and go to state 33

    restPerson                     shift and go to state 31

state 26

    (8) person -> LEVEL POINTER INDI conteudo . BEGIN
    (9) conteudo -> conteudo . LEVEL restPerson

    BEGIN           shift and go to state 35
    LEVEL           shift and go to state 34


state 27

    (20) conteudoF -> LEVEL . restFams
    (21) restFams -> . CONTENT
    (22) restFams -> . MULTITAG

    CONTENT         shift and go to state 37
    MULTITAG        shift and go to state 38

    restFams                       shift and go to state 36

state 28

    (15) family -> LEVEL POINTER FAM conteudoF . BEGIN
    (16) family -> LEVEL POINTER FAM conteudoF . END_FILE
    (19) conteudoF -> conteudoF . LEVEL restFams

    BEGIN           shift and go to state 40
    END_FILE        shift and go to state 41
    LEVEL           shift and go to state 39


state 29

    (17) family -> LEVEL POINTER FAM BEGIN .

    LEVEL           reduce using rule 17 (family -> LEVEL POINTER FAM BEGIN .)
    $end            reduce using rule 17 (family -> LEVEL POINTER FAM BEGIN .)


state 30

    (18) family -> LEVEL POINTER FAM END_FILE .

    LEVEL           reduce using rule 18 (family -> LEVEL POINTER FAM END_FILE .)
    $end            reduce using rule 18 (family -> LEVEL POINTER FAM END_FILE .)


state 31

    (10) conteudo -> LEVEL restPerson .

    BEGIN           reduce using rule 10 (conteudo -> LEVEL restPerson .)
    LEVEL           reduce using rule 10 (conteudo -> LEVEL restPerson .)


state 32

    (11) restPerson -> CONTENT .

    BEGIN           reduce using rule 11 (restPerson -> CONTENT .)
    LEVEL           reduce using rule 11 (restPerson -> CONTENT .)


state 33

    (12) restPerson -> MULTITAG .

    BEGIN           reduce using rule 12 (restPerson -> MULTITAG .)
    LEVEL           reduce using rule 12 (restPerson -> MULTITAG .)


state 34

    (9) conteudo -> conteudo LEVEL . restPerson
    (11) restPerson -> . CONTENT
    (12) restPerson -> . MULTITAG

    CONTENT         shift and go to state 32
    MULTITAG        shift and go to state 33

    restPerson                     shift and go to state 42

state 35

    (8) person -> LEVEL POINTER INDI conteudo BEGIN .

    LEVEL           reduce using rule 8 (person -> LEVEL POINTER INDI conteudo BEGIN .)


state 36

    (20) conteudoF -> LEVEL restFams .

    BEGIN           reduce using rule 20 (conteudoF -> LEVEL restFams .)
    END_FILE        reduce using rule 20 (conteudoF -> LEVEL restFams .)
    LEVEL           reduce using rule 20 (conteudoF -> LEVEL restFams .)


state 37

    (21) restFams -> CONTENT .

    BEGIN           reduce using rule 21 (restFams -> CONTENT .)
    END_FILE        reduce using rule 21 (restFams -> CONTENT .)
    LEVEL           reduce using rule 21 (restFams -> CONTENT .)


state 38

    (22) restFams -> MULTITAG .

    BEGIN           reduce using rule 22 (restFams -> MULTITAG .)
    END_FILE        reduce using rule 22 (restFams -> MULTITAG .)
    LEVEL           reduce using rule 22 (restFams -> MULTITAG .)


state 39

    (19) conteudoF -> conteudoF LEVEL . restFams
    (21) restFams -> . CONTENT
    (22) restFams -> . MULTITAG

    CONTENT         shift and go to state 37
    MULTITAG        shift and go to state 38

    restFams                       shift and go to state 43

state 40

    (15) family -> LEVEL POINTER FAM conteudoF BEGIN .

    LEVEL           reduce using rule 15 (family -> LEVEL POINTER FAM conteudoF BEGIN .)
    $end            reduce using rule 15 (family -> LEVEL POINTER FAM conteudoF BEGIN .)


state 41

    (16) family -> LEVEL POINTER FAM conteudoF END_FILE .

    LEVEL           reduce using rule 16 (family -> LEVEL POINTER FAM conteudoF END_FILE .)
    $end            reduce using rule 16 (family -> LEVEL POINTER FAM conteudoF END_FILE .)


state 42

    (9) conteudo -> conteudo LEVEL restPerson .

    BEGIN           reduce using rule 9 (conteudo -> conteudo LEVEL restPerson .)
    LEVEL           reduce using rule 9 (conteudo -> conteudo LEVEL restPerson .)


state 43

    (19) conteudoF -> conteudoF LEVEL restFams .

    BEGIN           reduce using rule 19 (conteudoF -> conteudoF LEVEL restFams .)
    END_FILE        reduce using rule 19 (conteudoF -> conteudoF LEVEL restFams .)
    LEVEL           reduce using rule 19 (conteudoF -> conteudoF LEVEL restFams .)

